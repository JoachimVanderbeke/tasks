name: API Test and deploy
on:
  push:
    paths:
      - 'services/tasks_api/**'   # so the CI pipeline only runs when changes to these files are made
      - '.github/workflows/api.yml'


env:  # new
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-west-1
  APP_ENVIRONMENT: development

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [2.1.3]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/tasks_api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --no-root
      - name: Run tests
        run: poetry run pytest tests.py --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [2.1.3]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/tasks_api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --no-root
      - name: Run black
        run: poetry run black . --check
      - name: Run isort
        run: poetry run isort . --check-only
      - name: Run flake8
        run: poetry run flake8 .
      - name: Run bandit
        run: poetry run bandit .
  deploy-development:
    needs: [ test, code-quality ] # Uncomment if you want to run tests and code quality checks before deployment
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        poetry-version: [ 2.1.3 ]
        node-version: [ 20.x ]  # Use a stable LTS version
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/tasks_api
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install poetry-plugin-export
        run: poetry self add poetry-plugin-export
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: npm
      - name: Debug Node.js Version
        run: node --version  # Print Node.js version
      - name: Clear NPM Cache
        run: npm cache clean --force
      - name: Install Serverless Framework
        run: npm install -g serverless@v3  # v4 is paying
      - name: Install NPM dependencies  #  installed dependencies from package.json
        run: npm install
      - name: Debug AWS Credentials
        run: echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" && echo "AWS_SECRET_ACCESS_KEY is set"
      - name: Deploy
        run: sls deploy --stage development --verbose
